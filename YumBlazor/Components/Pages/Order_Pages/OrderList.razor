@page "/Order/List"
@inject IOrderRepository _orderRepository
@inject NavigationManager _NavigationManager
<link rel="stylesheet" href="/css/orderList.css" />

<PageTitle>Order List</PageTitle>



@if (isProcessing)
{
    <div class="d-flex justify-content-center align-items-center" style="height:85vh">
        <img src="/images/loading.gif" alt="loading" class="img-fluid" />
    </div>
}
else
{
    <div class="card shadow border-0 m-4 OrderList-CARD">
        <div class="card-header bg-black bg-gradient ml-0 py-3 OrderList-HEADER">
            <div class="col-12 text-center">
                <h2 class="text-white py-2 OrderList-HEADING">Order List <i class="bi bi-card-list"></i></h2>
            </div>
        </div>
        <div class="card-body p-4 OrderList-CARD-BODY">
            @if (OrderHeaders.Any())
            {
                <table class="table table-bordered table-striped OrderList-table">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th>Name</th>
                            <th>Phone Number</th>
                            <th>Email</th>
                            <th>Order Total</th>
                            <th>Order Date</th>
                            <th>Status</th>
                            <th>Action Buttons</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var obj in OrderHeaders)
                        {
                            <tr>
                                <td>@obj.Id</td>
                                <td>@obj.Name</td>
                                <td>@obj.PhoneNumber</td>
                                <td>@obj.Email</td>
                                <td>@obj.OrderTotal</td>
                                <td>@obj.OrderDate</td>
                                <td>@obj.Status</td>
                                <td>
                                    <a href="@($"order/details/{obj.Id}")" class="btn btn-secondary"><i class="bi bi-info-circle"></i> Details</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
    </div>
}

@code {
    private bool isProcessing { get; set; } = true;
   
    private IEnumerable<OrderHeader> OrderHeaders = new List<OrderHeader>();

    protected override async Task OnInitializedAsync()
    {

    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await LoadOrderHeader();
            isProcessing = false;
            StateHasChanged();
        }
    }

    private async Task LoadOrderHeader()
    {
        OrderHeaders = await _orderRepository.GetAllAsync();
    }
}