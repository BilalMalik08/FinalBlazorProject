@inject AuthenticationStateProvider _AuthenticationStateProvider
@inject SharedStateService _sharedStateService
@inject IShoppingCartRepository _shoppingCartRepository

<nav class="navbar navbar-expand-md navbar-dark bg-dark pb-4 pt-4">
    <div class="container-fluid">
        <a class="navbar-brand" href="">
            <img src="/images/Logo.png" alt="Bootstrap" width="30" height="24">
            YumBlazor
        </a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarCollapse"
                aria-controls="navbarCollapse" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarCollapse">
            <ul class="navbar-nav me-auto mb-2 mb-md-0">

                <li class="nav-item mx-2">
                    <NavLink class="nav-link text-white" href="">
                        <span class="bi bi-house-door" aria-hidden="true"></span> Home
                    </NavLink>
                </li>

                <li class="nav-item mx-2">
                    <NavLink class="nav-link text-white" href="Cart">
                        <span class="bi bi-cart4" aria-hidden="true"></span> Cart (@_sharedStateService.TotalCartCount)
                    </NavLink>
                </li>

                <li class="nav-item mx-2">
                    <NavLink class="nav-link text-white" href="Order/List">
                        <span class="bi bi-card-list" aria-hidden="true"></span> Order List
                    </NavLink>
                </li>

            </ul>
            <ul class="d-flex navbar-nav mb-2 mb-md-0">
                <AuthorizeView>
                    <Authorized>
                        <li class="nav-item">
                            <button class="nav-link active me-2" style="cursor: pointer; background: transparent; border: 0px;">
                                Welcome, @context?.User?.Identity?.Name
                            </button>
                        </li>
                        <li class="nav-item">
                            <form action="Account/Logout" method="post">
                                <AntiforgeryToken />
                                <input type="hidden" name="ReturnUrl" value="" />
                                <button type="submit" class="nav-link btn btn-secondary">
                                    <span class="bi bi-arrow-bar-left-nav-menu" aria-hidden="true"></span> Logout
                                </button>
                            </form>
                        </li>
                    </Authorized>
                    <NotAuthorized>
                        <li class="nav-item">
                            <NavLink class="nav-link btn btn-secondary" href="Account/Register">
                                <span class="bi bi-person-nav-menu" aria-hidden="true"></span> Register
                            </NavLink>
                        </li>
                        <li class="nav-item">
                            <NavLink class="nav-link btn btn-secondary" href="Account/Login">
                                <span class="bi bi-person-badge-nav-menu" aria-hidden="true"></span> Login
                            </NavLink>
                        </li>
                    </NotAuthorized>
                </AuthorizeView>
            </ul>
        </div>
    </div>
</nav>

@code {
    protected override void OnInitialized()
    {
        _sharedStateService.OnChange += OnSharedStateChange;
        GetInitialCount();
    }

    private void OnSharedStateChange()
    {
        InvokeAsync(StateHasChanged);
    }

    public async Task GetInitialCount()
    {
        var authState = await _AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        _sharedStateService.TotalCartCount =
        await _shoppingCartRepository.GetTotalCartCountAsync(user?.FindFirst(u => u.Type.Contains("nameidentifier"))?.Value);
    }

    public void Dispose()
    {
        _sharedStateService.OnChange -= OnSharedStateChange;
    }
}